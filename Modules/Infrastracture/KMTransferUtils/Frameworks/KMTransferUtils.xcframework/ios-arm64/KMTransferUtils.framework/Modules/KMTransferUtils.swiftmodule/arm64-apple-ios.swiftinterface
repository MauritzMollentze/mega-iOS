// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.1 effective-5.10 (swiftlang-6.1.0.110.21 clang-1700.0.13.3)
// swift-module-flags: -target arm64-apple-ios15.6 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-experimental-feature DebugDescriptionMacro -enable-bare-slash-regex -module-name KMTransferUtils
// swift-module-flags-ignorable:  -interface-compiler-version 6.1
import CommonCrypto
import CryptoKit
import Foundation
import Security
import Swift
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public struct KMQueryConfig : Swift.Hashable {
  public let service: Swift.String
  public let account: Swift.String
  public let group: Swift.String?
  public let label: Swift.String?
  public init(service: Swift.String, account: Swift.String, group: Swift.String? = nil, label: Swift.String? = nil)
  public static func == (a: KMTransferUtils.KMQueryConfig, b: KMTransferUtils.KMQueryConfig) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
public struct KMTransferConfig {
  public init(kmQueryConfigs: [KMTransferUtils.KMQueryConfig], transferFileName: Swift.String? = nil, transferSalt: Swift.String? = nil)
}
public protocol KMTransferring {
  func createTransferFile() async throws
  func importTransferFile() throws
  func getDataFromTransferFile() throws -> [KMTransferUtils.KMQueryConfig]
  func deleteTransferFile() throws
  func recreateTransferFile() async throws
}
public struct MEGAKMTransferUtils : KMTransferUtils.KMTransferring {
  public init(config: KMTransferUtils.KMTransferConfig, fileManager: Foundation.FileManager = .default)
  public func createTransferFile() async throws
  public func importTransferFile() throws
  public func getDataFromTransferFile() throws -> [KMTransferUtils.KMQueryConfig]
  public func deleteTransferFile() throws
  public func recreateTransferFile() async throws
}
